@using System.Collections.Generic;
@using EcommerceDemo.Model;
@using EcommerceDemo.Web.Common;
@inject IJsonHelper Json;
@model ProductViewModel;
@{
    ViewData["Title"] = "Home Page";
}

@{
    List<Product> products = Model.products.Where(x => x.ProdCatId == 1).ToList();
    var productCategories = Model.products.Select(c => new { c.CategoryName, c.ProdCatId }).Distinct();
    Dictionary<int, string> MasterattributeNameList = new Dictionary<int, string>();
    foreach (var item in products)
    {
        foreach (var att in item.attributeNameList)
        {
            MasterattributeNameList.TryAdd(att.Key, att.Value);
        }
    }
    int counter = 0;
}

@*<p id="Createproduct">
        <b>Create New</b>
    </p>*@

<div id="productListArea">
    <div class="unselected-field" style="display: inline-block;">
        <label>
            Product Category :
            @Html.DropDownList("ProdCatId", new SelectList(productCategories, "ProdCatId", "CategoryName"), new { @id = "ProdCatId" })
        </label>
    </div>


    <div class="tableFixHead">
        <table class="table">
            <thead id="ProductheaderList">
                <tr>
                    <th>Product Name</th>
                    <th>Product Description</th>
                    @foreach (var item in MasterattributeNameList)
                    {
                        <th id="@item.Key">
                            @item.Value
                        </th>
                    }
                    <th>
                        Operation
                    </th>
                </tr>
            </thead>
            <tbody id="ProductList">
                @foreach (var item in products)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProdName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProdDescription)
                        </td>
                        @if (item.attributeValueList.Any())
                        {
                            @foreach (var atrvalue in item.attributeValueList)
                            {
                                counter++;
                                <td id="@atrvalue.Key">
                                    @Html.DisplayFor(modelItem => atrvalue.Value)
                                </td>
                            }
                        }
                        else
                        {
                            for (int i = 0; i < counter; i++)
                            {
                                <td></td>
                            }
                        }

                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |
                            <a href="javascript:void(0);" data-ProductId="@item.ProductId" id="Deletemodel">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="productCreateArea">
    <partial name="~/Views/Product/_Create.cshtml" for="@Model">
</div>

<script type="text/javascript">
    var ProudctList = @Html.Raw(Json.Serialize(Model.products));
    var MasterAttrList = @Html.Raw(Json.Serialize(MasterDataHelper.GetAttributeNameList()))
    var OldMasterAttrList = @Html.Raw(Json.Serialize(MasterattributeNameList))
</script>